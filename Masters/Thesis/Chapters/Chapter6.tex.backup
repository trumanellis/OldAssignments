% Chapter 6

\chapter{Conclusion}\label{Conclusion}

We have developed a general finite element framework for Lagrangian computational fluid dynamics. This method is energy conserving by formulation, provides a natural extension to arbitrarily high order finite element choices, and supports a tensor artificial viscosity. We have also developed \texttt{Fermium} as a corresponding hydrocode test-bed written in Matlab to implement these ideas. \texttt{Fermium} allows for the independent choice of kinematic and thermodynamic basis functions as well as several modifiers to the standard methods. We have explored a wide variety of different mixed finite element pairs and presented four for further study: \el{Q_1}{Q_0}, \el{Q_1}{\hat Q_1}, \el{Q_2}{\hat Q_1}, and \el{Q_2}{\hat Q_2}. 

The bi-quadratic kinematic methods allow for curvilinear elements that show promise for more accurately modeling curved geometries. They also allow for the straightforward calculation of second derivatives in space and gradients of the thermodynamic variables sub-zonally, which could potentially aid in sub-zonal physics in a multi-material ALE code. Higher order methods appear to show less mesh-based interference to shock passage, regardless of zonal orientation. While shock capturing is much sharper for higher order methods, the problem of oscillations about the shock front remains unresolved. The method of hyperviscosity has been proposed as a promising means of filtering out these high frequency oscillations for higher order methods.

The Sod shocktube showed us that higher order methods do indeed show promise for shock hydrodynamics problems and that they will converge to the correct solution faster than traditional low order methods. We also learned that in order for a low order method to achieve even comparable accuracy to a bi-quadratic solution with $NZ$ elements you would need $2^{nD}NZ$ bi-linear elements, where $nD$ is the dimensionality of the problem.

The Noh problem required a huge number of low order elements to come anywhere close to the exact solution or correct post-shock density. High order methods approached these values much faster, but suffered from significant shock ringing. \el{Q_2}{\hat Q_1} in particular, suffered from unacceptable undershoots and overshoots while \el{Q_2}{\hat Q_2} appeared to eliminate undershoots and magnify the less dangerous overshoots.

The Saltzman piston revealed the unpredictable behavior of hourglass modes and filters. Low order methods produced better results without a filter while the higher order methods were aided by an hourglass filter. Higher order methods showed less grid distortion and sharper, straighter shocks. Despite its reliance on an hourglass filter, \el{Q_2}{\hat Q_1} produced the best results overall.

The Sedov explosion revealed the true strength of higher order methods - the ability to produce curvilinear edges. This becomes an indispensable property when considering curved phenomena and geometries, especially in a Lagrangian sense where an initially refined mesh may expand. Low order methods produced kinked shock waves at low resolution - a property induced by the original straight-edged zone. High order methods produced curved zones very reminiscent of the exact Sedov mesh deformation. The full mesh test further exhibits the regidity of low order methods and the contrasting flexibility of curvilinear elements to produce almost circular zones. Additionally, a large number of low order methods were required to predict the correct maximum shock density while relatively few high order zones could do a much better job. Spurious modes appear to plague both low and high order methods, but high order to a lesser degree. Throughout each of these tests we have seen sharper shock capturing abilities bi-quadratic elements.

We have compiled information a table of run times for the Sedov and Noh problems. A good rule of thumb is that in order to obtain comparable accuracy with low order methods, twice as many must be used in one dimension, four times as many in two dimensions, and eight times for full 3-D simulations. Since many calculations are done element by element, this really starts to add up. It makes more sense to place more of the computational burden within each cell rather than use many more lower order cells. For the test problems considered, bi-quadratice elements were, on average, twice as fast as the equivalent bi-linear elements. 

When all of these factors are considered together it becomes clear that higher order methods, especially \el{Q_2}{\hat Q_1} show promise for inclusion in a full ALE hydrocode. There are still significant hurdles to overcome,  